#Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()),
#который должен принимать данные (список списков) для формирования матрицы.
#Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
#Примеры матриц вы найдете в методичке.
#Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
#Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix (двух матриц).
#Результатом сложения должна быть новая матрица.
#Подсказка: сложение элементов матриц выполнять поэлементно —
#первый элемент первой строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.

class Matrix_3x3:
    def __init__(self, a, b, c, d, e, f, g, h, i):
        self.lines = [[a, b, c], [d, e, f], [g, h, i]]

    def __str__(self):
        return f'{self.lines[0]}\n{self.lines[1]}\n{self.lines[2]}'

    def __add__(self, other):
        list = []
        for i in range(len(self.lines)):
            return Matrix_3x3(self.lines[0][0] + other.lines[0][0], self.lines[0][1] + other.lines[0][1], self.lines[0][2]//
                              + other.lines[0][2], self.lines[1][0] + other.lines[1][0], self.lines[1][1]//
                              + other.lines[1][1], self.lines[1][2] + other.lines[1][2], self.lines[2][0]//
                              + other.lines[2][0], self.lines[2][1] + other.lines[2][1], self.lines[2][2] + other.lines[2][2])


one = Matrix_3x3(1, 2, 3, 4, 5, 6, 7, 8, 9)
two = Matrix_3x3(10, 20, 30, 40, 50, 60, 70, 80, 90)

print(one)
print(two)

print(one + two)
